import { useState } from 'react'
import Cookies from 'js-cookie'
import Router from 'next/router'
import { unauthPage } from '@/middlewares/authorizationPage'
import Head from 'next/head'
import Link from 'next/link'

export async function getServerSideProps(ctx) {
	await unauthPage(ctx)

	return { props: {} }
}

export default function Login() {
	const [fields, setFields] = useState({
		email: '',
		password: '',
	})

	const [status, setStatus] = useState('normal')

	// useEffect ini untuk client side
	// useEffect(() => {
	// 	const token = Cookies.get('token');

	// 	if (token) Router.push('/posts');
	// }, []);

	async function loginHandler(e) {
		e.preventDefault()

		setStatus('loading')

		const loginReq = await fetch('/api/auth/login', {
			method: 'POST',
			headers: {
				'Content-Type': 'application/json',
			},
			body: JSON.stringify(fields),
		})

		if (!loginReq.ok) return setStatus('error ' + loginReq.status)

		const loginRes = await loginReq.json()

		setStatus('success')

		Cookies.set('token', loginRes.token)

		Router.push('/posts')
	}

	function fieldHandler(e) {
		const name = e.target.getAttribute('name')

		setFields({
			...fields,
			[name]: e.target.value,
		})
	}

	return (
		<>
			<Head>
				<title>Next Full | Login</title>
				<meta name='description' content='Generated by create next app' />
				<meta name='viewport' content='width=device-width, initial-scale=1' />
				<link rel='icon' href='/favicon.ico' />
			</Head>
			<h1>Login</h1>
			<br />
			<form onSubmit={loginHandler.bind(this)}>
				<input
					onChange={fieldHandler.bind(this)}
					type='text'
					name='email'
					placeholder='Email'
				/>
				<input
					onChange={fieldHandler.bind(this)}
					type='password'
					name='password'
					placeholder='Password'
				/>
				<br />
				<button type='submit'>Login</button>
				<div>
					<br />
					<p>Status: {status}</p>
					<br />
					<Link href='/auth/register'>&gt; Register</Link>
				</div>
			</form>
		</>
	)
}
